{"ast":null,"code":"import'./App.css';import Navbar from'./components/Navbar';import TextForm from'./components/TextForm';import About from'./components/About';import{useState}from'react';import Alert from'./components/Alert';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('light');// Whether dark mode is enabled or not\nconst[alert,setAlert]=useState(null);const showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},1500);};const toggleMode=()=>{if(mode==='light'){setMode('dark');document.body.style.backgroundColor='#23114e';showAlert(\"Dark mode has been enabled\",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';showAlert(\"Light mode has been enabled\",\"success\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"My-App\",mode:mode,toggleMode:toggleMode},new DataTransfer()),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter the text analyze\",mode:mode})})]})})]})});}export default App;","map":{"version":3,"names":["Navbar","TextForm","About","useState","Alert","BrowserRouter","Router","Routes","Route","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","DataTransfer","className","exact","path","element","heading"],"sources":["E:/GITPROJECT/iTextUtils/src/App.js"],"sourcesContent":["\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport About from './components/About';\r\nimport { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n\r\nimport { \r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  \r\n}from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type)=>{\r\n      setAlert({\r\n        msg: message,\r\n        type: type\r\n      })\r\n      setTimeout(() => {\r\n          setAlert(null);\r\n      }, 1500);\r\n  }\r\n\r\n  const toggleMode = ()=>{\r\n    if(mode === 'light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#23114e';\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n\r\n  return (\r\n   <>\r\n   <Router>\r\n\r\n   <Navbar title=\"My-App\" mode= {mode} toggleMode={toggleMode} key={new DataTransfer()}/>\r\n   <Alert alert={alert}/>\r\n   <div className=\"container my-3\">\r\n\r\n    <Routes>\r\n      <Route exact path=\"/about\" element={<About/>}>\r\n      </Route>\r\n\r\n      <Route exact path=\"/\" element={\r\n      <TextForm showAlert={showAlert} heading=\"Enter the text analyze\" mode={mode}/>}>\r\n      </Route>\r\n    \r\n    </Routes>\r\n   </div>\r\n   </Router>\r\n   </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AACA,MAAO,WAAW,CAClB,MAAO,CAAAA,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAEtC,OACEC,aAAa,GAAI,CAAAC,MAAM,CACvBC,MAAM,CACNC,KAAK,KAED,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEzB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,OAAO,CAAC,CAAE;AAC3C,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAiB,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAG,CAC/BH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACbL,QAAQ,CAAC,IAAI,CAAC,CAClB,CAAC,CAAE,IAAI,CAAC,CACZ,CAAC,CAED,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAI,CACrB,GAAGT,IAAI,GAAK,OAAO,CAAC,CAClBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACpD,CAAC,IACG,CACFH,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACrD,CACF,CAAC,CAED,mBACCV,IAAA,CAAAI,SAAA,EAAAgB,QAAA,cACAlB,KAAA,CAACN,MAAM,EAAAwB,QAAA,eAEPpB,IAAA,CAACV,MAAM,EAAC+B,KAAK,CAAC,QAAQ,CAACf,IAAI,CAAGA,IAAK,CAACS,UAAU,CAAEA,UAAW,EAAM,GAAI,CAAAO,YAAY,CAAC,CAAG,CAAC,cACtFtB,IAAA,CAACN,KAAK,EAACc,KAAK,CAAEA,KAAM,CAAC,CAAC,cACtBR,IAAA,QAAKuB,SAAS,CAAC,gBAAgB,CAAAH,QAAA,cAE9BlB,KAAA,CAACL,MAAM,EAAAuB,QAAA,eACLpB,IAAA,CAACF,KAAK,EAAC0B,KAAK,MAACC,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAE1B,IAAA,CAACR,KAAK,GAAC,CAAE,CACtC,CAAC,cAERQ,IAAA,CAACF,KAAK,EAAC0B,KAAK,MAACC,IAAI,CAAC,GAAG,CAACC,OAAO,cAC7B1B,IAAA,CAACT,QAAQ,EAACmB,SAAS,CAAEA,SAAU,CAACiB,OAAO,CAAC,wBAAwB,CAACrB,IAAI,CAAEA,IAAK,CAAC,CAAE,CACxE,CAAC,EAEF,CAAC,CACL,CAAC,EACE,CAAC,CACP,CAAC,CAEN,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}